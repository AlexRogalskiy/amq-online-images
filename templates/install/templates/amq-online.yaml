apiVersion: v1
kind: Template
metadata:
  name: amq-online
parameters:
- name: NAMESPACE
  description: Namespace where AMQ Online should be deployed
  required: true
objects:
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    name: addressplans.admin.enmasse.io
    labels:
      app: enmasse
  spec:
    group: admin.enmasse.io
    version: v1beta1
    scope: Namespaced
    names:
      kind: AddressPlan
      listKind: AddressPlanList
      singular: addressplan
      plural: addressplans
    versions:
      - name: v1beta1
        served: true
        storage: true
      - name: v1alpha1
        served: true
        storage: false
    validation:
      openAPIV3Schema:
        properties:
          displayName:
            type: string
          displayOrder:
            type: integer
          shortDescription:
            type: string
          longDescription:
            type: string
          uuid:
            type: string
          addressType:
            type: string
          requiredResources:
            type: array
            items:
              type: object
              required:
              - name
              - credit
              properties:
                name:
                  type: string
                credit:
                  type: number
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    name: addressspaceplans.admin.enmasse.io
    labels:
      app: enmasse
  spec:
    group: admin.enmasse.io
    version: v1beta1
    scope: Namespaced
    names:
      kind: AddressSpacePlan
      listKind: AddressSpacePlanList
      singular: addressspaceplan
      plural: addressspaceplans
    versions:
      - name: v1beta1
        served: true
        storage: true
      - name: v1alpha1
        served: true
        storage: false
    validation:
      openAPIV3Schema:
        properties:
          displayName:
            type: string
          displayOrder:
            type: integer
          shortDescription:
            type: string
          longDescription:
            type: string
          uuid:
            type: string
          addressSpaceType:
            type: string
          resources:
            type: array
            items:
              type: object
              required:
              - name
              - max
              properties:
                name:
                  type: string
                max:
                  type: number
          addressPlans:
            type: array
            items:
              type: string
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    name: brokeredinfraconfigs.admin.enmasse.io
    labels:
      app: enmasse
  spec:
    group: admin.enmasse.io
    version: v1beta1
    scope: Namespaced
    names:
      kind: BrokeredInfraConfig
      listKind: BrokeredInfraConfigList
      singular: brokeredinfraconfig
      plural: brokeredinfraconfigs
    versions:
      - name: v1beta1
        served: true
        storage: true
      - name: v1alpha1
        served: true
        storage: false
    validation:
      openAPIV3Schema:
        properties:
          spec:
            type: object
            required:
            - version
            properties:
              version:
                type: string
              networkPolicy:
                type: object
                properties:
                  ingress:
                    type: array
                  egress:
                    type: array
              admin:
                type: object
                properties:
                  resources:
                    type: object
                    properties:
                      memory:
                        type: string
              broker:
                type: object
                properties:
                  resources:
                    type: object
                    properties:
                      memory:
                        type: string
                      storage:
                        type: string
                  addressFullPolicy:
                    type: string
                    enum:
                    - PAGE
                    - BLOCK
                    - FAIL
                    - DROP
                  storageClassName:
                    type: string
                  updatePersistentVolumeClaim:
                    type: boolean
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    name: standardinfraconfigs.admin.enmasse.io
    labels:
      app: enmasse
  spec:
    group: admin.enmasse.io
    version: v1beta1
    scope: Namespaced
    names:
      kind: StandardInfraConfig
      listKind: StandardInfraConfigList
      singular: standardinfraconfig
      plural: standardinfraconfigs
    versions:
      - name: v1beta1
        served: true
        storage: true
      - name: v1alpha1
        served: true
        storage: false
    validation:
      openAPIV3Schema:
        properties:
          spec:
            type: object
            required:
            - version
            properties:
              version:
                type: string
              networkPolicy:
                type: object
                properties:
                  ingress:
                    type: array
                  egress:
                    type: array
              admin:
                type: object
                properties:
                  resources:
                    type: object
                    properties:
                      memory:
                        type: string
              broker:
                type: object
                properties:
                  resources:
                    type: object
                    properties:
                      memory:
                        type: string
                      storage:
                        type: string
                  addressFullPolicy:
                    type: string
                    enum:
                    - PAGE
                    - BLOCK
                    - FAIL
                    - DROP
                  storageClassName:
                    type: string
                  updatePersistentVolumeClaim:
                    type: boolean
              router:
                type: object
                properties:
                  resources:
                    type: object
                    properties:
                      memory:
                        type: string
                  minReplicas:
                    type: integer
                  linkCapacity:
                    type: integer
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: address-space-admin
    labels:
      app: enmasse
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: address-space-controller
    labels:
      app: enmasse
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: enmasse.io:service-admin
    labels:
      app: enmasse
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
  rules:
    - apiGroups: [ "admin.enmasse.io" ]
      resources: [ "addressplans", "addressspaceplans", "brokeredinfraconfigs", "standardinfraconfigs" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      app: enmasse
    name: enmasse.io:admin-reader
  rules:
    - apiGroups: [ "admin.enmasse.io" ]
      resources: [ "addressplans", "addressspaceplans", "brokeredinfraconfigs", "standardinfraconfigs" ]
      verbs: [ "get", "list", "watch" ]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: adress-space-admin-admin
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: address-space-admin
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: adress-space-admin-admin-reader
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: enmasse.io:admin-reader
  subjects:
  - kind: ServiceAccount
    name: address-space-admin
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: adress-space-controller-admin-reader
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: enmasse.io:admin-reader
  subjects:
  - kind: ServiceAccount
    name: address-space-controller
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: adress-space-controller-admin
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: address-space-controller
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: default-view
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: Service
  metadata:
    name: address-space-controller
    labels:
      app: enmasse
  spec:
    ports:
    - name: health
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      name: address-space-controller
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
      name: address-space-controller
    name: address-space-controller
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: enmasse
        name: address-space-controller
    template:
      metadata:
        labels:
          app: enmasse
          name: address-space-controller
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: JAVA_OPTS
            value: -verbose:gc
          - name: ENABLE_EVENT_LOGGER
            valueFrom:
              configMapKeyRef:
                key: enableEventLogger
                name: address-space-controller-config
                optional: true
          - name: EXPOSE_ENDPOINTS_BY_DEFAULT
            valueFrom:
              configMapKeyRef:
                key: exposeEndpointsByDefault
                name: address-space-controller-config
                optional: true
          - name: ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                key: environment
                name: address-space-controller-config
                optional: true
          - name: TEMPLATE_DIR
            value: /templates
          - name: RESOURCES_DIR
            value: /opt
          - name: STANDARD_AUTHSERVICE_CONFIG_NAME
            value: keycloak-config
          - name: STANDARD_AUTHSERVICE_CREDENTIALS_SECRET_NAME
            value: keycloak-credentials
          - name: STANDARD_AUTHSERVICE_CERT_SECRET_NAME
            value: standard-authservice-cert
          - name: WILDCARD_ENDPOINT_CERT_SECRET
            valueFrom:
              configMapKeyRef:
                key: wildcardEndpointCertSecret
                name: address-space-controller-config
                optional: true
          - name: RESYNC_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: resyncInterval
                name: address-space-controller-config
                optional: true
          - name: RECHECK_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: recheckInterval
                name: address-space-controller-config
                optional: true
          image: amq7/amq-online-1-address-space-controller:dev
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          name: address-space-controller
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 256Mi
        serviceAccountName: address-space-controller
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: api-server
    labels:
      app: enmasse
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: enmasse
    name: enmasse.io:api-server
  rules:
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addresses", "addressspaces" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
    - apiGroups: [ "user.enmasse.io" ]
      resources: [ "messagingusers" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
    - apiGroups: [ "admin.enmasse.io" ]
      resources: [ "addressspaceplans", "addressplans", "standardinfraconfigs", "brokeredinfraconfigs" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "enmasse.io:api-server-auth-delegator-${NAMESPACE}"
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: api-server
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "enmasse.io:api-server-${NAMESPACE}"
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: enmasse.io:api-server
  subjects:
  - kind: ServiceAccount
    name: api-server
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: "enmasse.io:apiserver-authentication-reader-${NAMESPACE}"
    namespace: kube-system
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    name: api-server
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: "enmasse.io:apiserver-edit"
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: api-server
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: Service
  metadata:
    name: api-server
    labels:
      app: enmasse
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: api-server-cert
  spec:
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: health
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      component: api-server
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
      component: api-server
    name: api-server
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: enmasse
        component: api-server
    template:
      metadata:
        labels:
          app: enmasse
          component: api-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: JAVA_OPTS
            value: -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps
          - name: CERT_DIR
            value: /api-server-cert
          - name: ENABLE_RBAC
            valueFrom:
              configMapKeyRef:
                key: enableRbac
                name: api-server-config
                optional: true
          - name: APISERVER_CLIENT_CA_CONFIG_NAME
            value: extension-apiserver-authentication
          - name: APISERVER_CLIENT_CA_CONFIG_NAMESPACE
            value: kube-system
          - name: APISERVER_ROUTE_NAME
            value: restapi
          - name: STANDARD_AUTHSERVICE_CONFIG_NAME
            value: keycloak-config
          - name: STANDARD_AUTHSERVICE_CREDENTIALS_SECRET_NAME
            value: keycloak-credentials
          - name: STANDARD_AUTHSERVICE_CERT_SECRET_NAME
            value: standard-authservice-cert
          image: amq7/amq-online-1-api-server:dev
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
          name: api-server
          ports:
          - containerPort: 8080
            name: http
          - containerPort: 8443
            name: https
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 512Mi
          volumeMounts:
          - mountPath: /api-server-cert
            name: api-server-cert
            readOnly: true
        serviceAccountName: api-server
        volumes:
        - name: api-server-cert
          secret:
            secretName: api-server-cert
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    labels:
      app: enmasse
    name: v1alpha1.enmasse.io
  spec:
    group: enmasse.io
    groupPriorityMinimum: 1000
    insecureSkipTLSVerify: true
    service:
      name: api-server
      namespace: ${NAMESPACE}
    version: v1alpha1
    versionPriority: 15
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    labels:
      app: enmasse
    name: v1alpha1.user.enmasse.io
  spec:
    group: user.enmasse.io
    groupPriorityMinimum: 1000
    insecureSkipTLSVerify: true
    service:
      name: api-server
      namespace: ${NAMESPACE}
    version: v1alpha1
    versionPriority: 15
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    labels:
      app: enmasse
    name: v1beta1.enmasse.io
  spec:
    group: enmasse.io
    groupPriorityMinimum: 1000
    insecureSkipTLSVerify: true
    service:
      name: api-server
      namespace: ${NAMESPACE}
    version: v1beta1
    versionPriority: 15
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    labels:
      app: enmasse
    name: v1beta1.user.enmasse.io
  spec:
    group: user.enmasse.io
    groupPriorityMinimum: 1000
    insecureSkipTLSVerify: true
    service:
      name: api-server
      namespace: ${NAMESPACE}
    version: v1beta1
    versionPriority: 15
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kc-oauth
    labels:
      app: enmasse
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: keycloak-controller
    labels:
      app: enmasse
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: standard-authservice
    labels:
      app: enmasse
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: enmasse.io:keycloak-controller
    labels:
      app: enmasse
  rules:
    - apiGroups: [ "", "user.openshift.io" ]
      resources: [ "users" ]
      verbs: [ "get" ]
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addressspaces" ]
      verbs: [ "list", "watch" ]
    - apiGroups: [ "oauth.openshift.io" ]
      resources: [ "oauthclients" ]
      verbs: [ "create", "get" ]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: keycloak-controller-edit
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: keycloak-controller
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "enmasse.io:keycloak-controller-${NAMESPACE}"
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: enmasse.io:keycloak-controller
  subjects:
  - kind: ServiceAccount
    name: keycloak-controller
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: "enmasse.io:std-authsvc-auth-delegator-${NAMESPACE}"
    labels:
      app: enmasse
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: standard-authservice
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      app: enmasse
      template: postgresql-persistent-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: standard-authservice
    labels:
      app: enmasse
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: standard-authservice-cert
  spec:
    ports:
    - name: amqps
      port: 5671
      protocol: TCP
      targetPort: amqps
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    selector:
      name: keycloak
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: enmasse
        name: keycloak-controller
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak-controller
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: AUTO_CREATE
            value: "true"
          - name: KEYCLOAK_ROUTE_NAME
            value: "keycloak"
          - name: KEYCLOAK_CONFIG_NAME
            value: "keycloak-config"
          - name: KEYCLOAK_CREDENTIALS_SECRET_NAME
            value: "keycloak-credentials"
          - name: KEYCLOAK_CERT_SECRET_NAME
            value: "standard-authservice-cert"
          image: amq7/amq-online-1-auth-controller:dev
          imagePullPolicy: Always
          name: keycloak-controller
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
        serviceAccountName: keycloak-controller
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak
  spec:
    replicas: 1
    strategy:
      type: Recreate
      rollingUpdate: null
    selector:
      matchLabels:
        app: enmasse
        name: keycloak
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: JAVA_OPTS_APPEND
            value: -Dvertx.cacheDirBase=/tmp -Djboss.bind.address=0.0.0.0 -Djava.net.preferIPv4Stack=true -Duser.timezone=UTC
          - name: SSO_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                key: admin.username
                name: keycloak-credentials
          - name: SSO_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin.password
                name: keycloak-credentials
          - name: KEYCLOAK_SASL_XOAUTH_BASE_URI
            valueFrom:
              configMapKeyRef:
                key: oauthUrl
                name: keycloak-config
                optional: true
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          image: redhat-sso-7/sso72-openshift:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /auth
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /auth
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
          name: keycloak
          ports:
          - containerPort: 5671
            name: amqps
          - containerPort: 8443
            name: https
          resources:
            limits:
              memory: 2Gi
          volumeMounts:
          - mountPath: /opt/eap/providers
            name: keycloak-providers
            readOnly: false
          - mountPath: /opt/eap/standalone/configuration
            name: keycloak-configuration
            readOnly: false
          - mountPath: /opt/enmasse/cert
            name: standard-authservice-cert
            readOnly: false
          - mountPath: /opt/eap/standalone/data
            name: keycloak-persistence
            readOnly: false
        initContainers:
        - env:
          - name: KEYCLOAK_DIR
            value: /opt/eap
          image: amq7/amq-online-1-auth-plugin:dev
          imagePullPolicy: Always
          name: keycloak-plugin
          volumeMounts:
          - mountPath: /opt/eap/providers
            name: keycloak-providers
            readOnly: false
          - mountPath: /opt/eap/standalone/configuration
            name: keycloak-configuration
            readOnly: false
          - mountPath: /opt/enmasse/cert
            name: standard-authservice-cert
            readOnly: false
        serviceAccountName: standard-authservice
        volumes:
        - name: standard-authservice-cert
          secret:
            secretName: standard-authservice-cert
        - name: keycloak-persistence
          persistentVolumeClaim:
            claimName: keycloak-data
        - emptyDir: {}
          name: keycloak-configuration
        - emptyDir: {}
          name: keycloak-providers
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: enmasse
      template: postgresql-persistent-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: postgresql:9.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - pg_isready -h 127.0.0.1 -p 5432
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: enmasse.io:tenant-edit
    labels:
      app: enmasse
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
  rules:
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addresses", "addressspaces" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addressspaceschemas" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "user.enmasse.io" ]
      resources: [ "messagingusers" ]
      verbs: [ "create", "get", "update", "delete", "list", "watch", "patch" ]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: enmasse.io:tenant-view
    labels:
      app: enmasse
      rbac.authorization.k8s.io/aggregate-to-view: "true"
  rules:
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addresses", "addressspaces" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "enmasse.io" ]
      resources: [ "addressspaceschemas" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "user.enmasse.io" ]
      resources: [ "messagingusers" ]
      verbs: [ "get", "list" ]
